{"remainingRequest":"/Users/chenying/system/node_modules/babel-loader/lib/index.js!/Users/chenying/system/node_modules/eslint-loader/index.js??ref--13-0!/Users/chenying/system/src/store/modules/user.js","dependencies":[{"path":"/Users/chenying/system/src/store/modules/user.js","mtime":1573198534000},{"path":"/Users/chenying/system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chenying/system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chenying/system/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nvar state = {};\nvar mutations = {\n  login: function login() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 ? arguments[1] : undefined;\n    state;\n    var params = payload.params,\n        callback = payload.callback;\n\n    if (!params.username) {\n      _Toast.fail('用户名为空');\n\n      return;\n    } else if (!params.password) {\n      _Toast.fail('密码为空');\n\n      return;\n    } else if (!params.VCodeImg) {\n      _Toast.fail('验证码不能为空');\n\n      return;\n    }\n\n    setTimeout(function () {\n      callback();\n\n      _Toast.success('登陆成功');\n    }, 1000);\n  },\n  register: function register() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var payload = arguments.length > 1 ? arguments[1] : undefined;\n    state;\n    var params = payload.params,\n        callback = payload.callback;\n\n    if (!params.username) {\n      _Toast.fail('用户名为空');\n\n      return;\n    } else if (!params.password) {\n      _Toast.fail('密码为空');\n\n      return;\n    } else if (!params.againPassword) {\n      _Toast.fail('再次填写密码为空');\n\n      return;\n    } else if (!params.verification) {\n      _Toast.fail('验证码为空');\n\n      return;\n    } else if (params.password !== params.againPassword) {\n      _Toast.fail('两次密码不一样');\n\n      return;\n    }\n\n    setTimeout(function () {\n      callback();\n\n      _Toast.success('注册成功');\n    }, 1000);\n  }\n};\nvar actions = {};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/chenying/system/src/store/modules/user.js"],"names":["state","mutations","login","payload","params","callback","username","fail","password","VCodeImg","setTimeout","success","register","againPassword","verification","actions","namespaced"],"mappings":";;AAEA,IAAMA,KAAK,GAAG,EAAd;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,KADc,mBACa;AAAA,QAArBF,KAAqB,uEAAb,EAAa;AAAA,QAATG,OAAS;AACvBH,IAAAA,KAAK;AADkB,QAEjBI,MAFiB,GAEID,OAFJ,CAEjBC,MAFiB;AAAA,QAETC,QAFS,GAEIF,OAFJ,CAETE,QAFS;;AAGvB,QAAI,CAACD,MAAM,CAACE,QAAZ,EAAsB;AAClB,aAAMC,IAAN,CAAW,OAAX;;AACA;AACH,KAHD,MAGO,IAAI,CAACH,MAAM,CAACI,QAAZ,EAAsB;AACzB,aAAMD,IAAN,CAAW,MAAX;;AACA;AACH,KAHM,MAGA,IAAI,CAACH,MAAM,CAACK,QAAZ,EAAsB;AACzB,aAAMF,IAAN,CAAW,SAAX;;AACA;AACH;;AACDG,IAAAA,UAAU,CAAC,YAAM;AACbL,MAAAA,QAAQ;;AACR,aAAMM,OAAN,CAAc,MAAd;AACH,KAHS,EAGP,IAHO,CAAV;AAIH,GAlBa;AAmBdC,EAAAA,QAnBc,sBAmBgB;AAAA,QAArBZ,KAAqB,uEAAb,EAAa;AAAA,QAATG,OAAS;AAC1BH,IAAAA,KAAK;AADqB,QAEpBI,MAFoB,GAECD,OAFD,CAEpBC,MAFoB;AAAA,QAEZC,QAFY,GAECF,OAFD,CAEZE,QAFY;;AAG1B,QAAI,CAACD,MAAM,CAACE,QAAZ,EAAsB;AAClB,aAAMC,IAAN,CAAW,OAAX;;AACA;AACH,KAHD,MAGO,IAAI,CAACH,MAAM,CAACI,QAAZ,EAAsB;AACzB,aAAMD,IAAN,CAAW,MAAX;;AACA;AACH,KAHM,MAGA,IAAI,CAACH,MAAM,CAACS,aAAZ,EAA2B;AAC9B,aAAMN,IAAN,CAAW,UAAX;;AACA;AACH,KAHM,MAGA,IAAI,CAACH,MAAM,CAACU,YAAZ,EAA0B;AAC7B,aAAMP,IAAN,CAAW,OAAX;;AACA;AACH,KAHM,MAGA,IAAIH,MAAM,CAACI,QAAP,KAAoBJ,MAAM,CAACS,aAA/B,EAA8C;AACjD,aAAMN,IAAN,CAAW,SAAX;;AACA;AACH;;AACDG,IAAAA,UAAU,CAAC,YAAM;AACbL,MAAAA,QAAQ;;AACR,aAAMM,OAAN,CAAc,MAAd;AACH,KAHS,EAGP,IAHO,CAAV;AAIH;AA1Ca,CAAlB;AA6CA,IAAMI,OAAO,GAAG,EAAhB;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXhB,EAAAA,KAAK,EAALA,KAFW;AAGXC,EAAAA,SAAS,EAATA,SAHW;AAIXc,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import { Toast } from 'vant'\r\n\r\nconst state = {\r\n}\r\n\r\nconst mutations = {\r\n    login(state = {}, payload) {\r\n        state\r\n        let { params, callback } = payload\r\n        if (!params.username) {\r\n            Toast.fail('用户名为空')\r\n            return\r\n        } else if (!params.password) {\r\n            Toast.fail('密码为空')\r\n            return\r\n        } else if (!params.VCodeImg) {\r\n            Toast.fail('验证码不能为空')\r\n            return\r\n        }\r\n        setTimeout(() => {\r\n            callback()\r\n            Toast.success('登陆成功')\r\n        }, 1000)\r\n    },\r\n    register(state = {}, payload) {\r\n        state\r\n        let { params, callback } = payload\r\n        if (!params.username) {\r\n            Toast.fail('用户名为空')\r\n            return\r\n        } else if (!params.password) {\r\n            Toast.fail('密码为空')\r\n            return\r\n        } else if (!params.againPassword) {\r\n            Toast.fail('再次填写密码为空')\r\n            return\r\n        } else if (!params.verification) {\r\n            Toast.fail('验证码为空')\r\n            return\r\n        } else if (params.password !== params.againPassword) {\r\n            Toast.fail('两次密码不一样')\r\n            return\r\n        }\r\n        setTimeout(() => {\r\n            callback()\r\n            Toast.success('注册成功')\r\n        }, 1000)\r\n    }\r\n}\r\n\r\nconst actions = {}\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    mutations,\r\n    actions\r\n}"]}]}